//
//  MovieDetailsPresenter.swift
//  Tram
//
//  Created by Roman Abuzyarov on 06.01.2018.
//  Copyright (c) 2018 Roman Abuzyarov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailsPresentationLogic
{
    func fillData(response: MovieDetails.FillData.Response)
    func presentPeople(response: MovieDetails.LoadPeople.Response)
    func presentWatchlist(response: MovieDetails.Watchlist.Response)
}

class MovieDetailsPresenter: MovieDetailsPresentationLogic
{
    weak var viewController: MovieDetailsDisplayLogic?
    
    func presentPeople(response: MovieDetails.LoadPeople.Response) {
        let viewModel = MovieDetails.LoadPeople.ViewModel(people: response.people)
        
        switch response.type {
        case .Cast:
            viewController?.displayCast(viewModel: viewModel)
        case .Crew:
            viewController?.displayCrew(viewModel: viewModel)
        }
        
    }
    
    func fillData(response: MovieDetails.FillData.Response)
    {
        let movie = response.movie
        let viewModel = MovieDetails.FillData.ViewModel(
            title: movie?.title,
            year: movie?.year,
            length: movie?.length,
            genres: movie?.genres.map({ (genre) -> String in
                return genre.name
            }).joined(separator: ", "),
            heartRating: movie?.rating,
            starRating: "Not available",
            imageUrl: movie?.imageUrl,
            plot: movie?.overview,
            details: [])
        viewController?.displayFilling(viewModel: viewModel)
    }
    
    func presentWatchlist(response: MovieDetails.Watchlist.Response){
        viewController?.displayWatchlistStatus(viewModel: MovieDetails.Watchlist.ViewModel(status: response.status))
    }
}
