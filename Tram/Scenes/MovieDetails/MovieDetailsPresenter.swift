//
//  MovieDetailsPresenter.swift
//  tram-clean
//
//  Created by Roman Abuzyarov on 06.01.2018.
//  Copyright (c) 2018 Roman Abuzyarov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailsPresentationLogic
{
    func fillData(response: MovieDetails.FillData.Response)
}

class MovieDetailsPresenter: MovieDetailsPresentationLogic
{
    weak var viewController: MovieDetailsDisplayLogic?
    
    // MARK: Do something
    
    func fillData(response: MovieDetails.FillData.Response)
    {
        let movie = response.movie
        let viewModel = MovieDetails.FillData.ViewModel(
            title: movie?.title,
            year: movie?.year,
            length: movie?.length,
            genres: movie?.genres.map({ (genre) -> String in
                return genre.name
            }).joined(separator: ", "),
            heartRating: movie?.rating,
            starRating: "Not available",
            imageUrl: movie?.imageUrl,
            plot: movie?.overview,
            cast: (movie?.cast.map { (pair) -> MovieDetails.FillData.ViewModel.Job in
                return MovieDetails.FillData.ViewModel.Job(name: pair.person.fullName, role: pair.role, imageUrl: pair.person.imageUrl)
                }) ?? [],
            crew: (movie?.crew.map { (pair) -> MovieDetails.FillData.ViewModel.Job in
                return MovieDetails.FillData.ViewModel.Job(name: pair.person.fullName, role: pair.role, imageUrl: pair.person.imageUrl)
                }) ?? [],
            details: [])
        viewController?.displayFilling(viewModel: viewModel)
    }
}
