//
//  MovieDetailsPresenter.swift
//  Tram
//
//  Created by Roman Abuzyarov on 06.01.2018.
//  Copyright (c) 2018 Roman Abuzyarov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailsPresentationLogic
{
    func fillData(response: MovieDetails.FillData.Response)
    func presentList(response: MovieDetails.List.Response)
}

class MovieDetailsPresenter: MovieDetailsPresentationLogic
{
    weak var viewController: MovieDetailsDisplayLogic?
    
    func fillData(response: MovieDetails.FillData.Response)
    {
        let movie = response.movie
        let viewModel = MovieDetails.FillData.ViewModel(movie: movie)
        viewController?.displayFilling(viewModel: viewModel)
    }
    
    func presentList(response: MovieDetails.List.Response){
        switch response.list{
        case .Watchlist:
            viewController?.displayWatchlistStatus(viewModel: MovieDetails.List.ViewModel(list: response.list, status: response.status, action: response.action))
        case .Watched:
            viewController?.displayWatchedStatus(viewModel: MovieDetails.List.ViewModel(list: response.list, status: response.status, action: response.action))
        }
        
    }
}
