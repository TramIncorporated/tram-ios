//
//  MovieDetailsWorker.swift
//  Tram
//
//  Created by Roman Abuzyarov on 06.01.2018.
//  Copyright (c) 2018 Roman Abuzyarov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Parse

class MovieDetailsWorker
{
    func loadPeople(of movie: Movie, type: MovieDetails.LoadPeople.JobType) -> [Job] {
        var people: [Job] = []
        let id = movie.id
        var roleName = ""
        var className = ""
        switch type{
        case .Cast:
            roleName = "character"
            className = "Cast"
        case .Crew:
            roleName = "job"
            className = "Crew"
        }
        
        let query = PFQuery(className: className).whereKey("movie_id", equalTo: id)
        query.cachePolicy = .networkElseCache
        do{
            let credits = try query.findObjects()
            for credit in credits{
                let role = credit[roleName] as! String
                let id = credit["ID"] as! Int
                let personQuery = PFQuery(className: "Person").whereKey("ID", equalTo: id)
                personQuery.cachePolicy = .networkElseCache
                
                let object = try personQuery.getFirstObject()
                let person = Person(pfo: object)
                people.append(Job(name: person.name, role: role, imageUrl: person.imageUrl))
            }
        }
        catch {
            print(error.localizedDescription)
        }
        
        return people
    }
}
