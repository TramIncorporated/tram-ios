//
//  ListsWorker.swift
//  Tram
//
//  Created by Roman Abuzyarov on 27.02.2018.
//  Copyright (c) 2018 Tram, inc.. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class ListsWorker
{
    func loadWatchlist(onSuccess: @escaping ([Movie])->Void){
        loadList(onSuccess: onSuccess, key: "watchlist_movie")
    }
    func loadWatched(onSuccess: @escaping ([Movie])->Void){
        loadList(onSuccess: onSuccess, key: "watched_movie")
    }
    private func loadList(onSuccess: @escaping ([Movie])->Void, key: String){
        let ud = UserDefaults.standard
        let key = key
        let list = ud.stringArray(forKey: key) ?? []
        
        let tmdb = TmdbWorker()
        
        let expectedCount = list.count
        var movies: [Movie] = []
        
        if expectedCount == 0{
            onSuccess([])
        }
        for id in list{
            if let id = Int(id){
                tmdb.getMovie(by: id, onSuccess: { (m) in
                    movies.append(m)
                    if movies.count == expectedCount{
                        onSuccess(movies)
                    }
                })
            }
        }
    }
}
