//
//  ListsInteractor.swift
//  Tram
//
//  Created by Roman Abuzyarov on 27.02.2018.
//  Copyright (c) 2018 Tram, inc.. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListsBusinessLogic
{
    func loadWatchlist(request: Lists.Watchlist.Request)
    func loadWatched(request: Lists.Watched.Request)
}

protocol ListsDataStore
{
    var watchlist: [Movie]? { get set }
    var watched: [Movie]? {get set}
}

class ListsInteractor: ListsBusinessLogic, ListsDataStore
{
    init() {
        worker = ListsWorker()
    }
    
    var watched: [Movie]?
    
    var watchlist: [Movie]?
    
    var presenter: ListsPresentationLogic?
    var worker: ListsWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func loadWatchlist(request: Lists.Watchlist.Request)
    {
        worker?.loadWatchlist {movies in
            DispatchQueue.main.async {
                let response = Lists.Watchlist.Response(watchlist: movies)
                self.watchlist = movies
                self.presenter?.presentWatchlist(response: response)
            }
        }
    }
    
    func loadWatched(request: Lists.Watched.Request) {
        worker?.loadWatched { movies in
            DispatchQueue.main.async {
                let response = Lists.Watched.Response(watched: movies)
                self.watched = movies
                self.presenter?.presentWatched(response: response)
            }
        }
    }
}
